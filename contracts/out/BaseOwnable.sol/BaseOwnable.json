{"abi":[{"type":"function","name":"NAME","inputs":[],"outputs":[{"name":"name","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"VERSION","inputs":[],"outputs":[{"name":"version","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"_NAME","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"acceptOwner","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"_owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pendingOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPendingOwner","inputs":[{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"NewOwnerSet","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PendingOwnerSet","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"NAME()":"a3f4df7e","VERSION()":"ffa1ad74","_NAME()":"08dbebf6","acceptOwner()":"ebbc4965","initialize(address)":"c4d66de8","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","setPendingOwner(address)":"c42069ec","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Cobo Safe Dev Team https://www.cobo.com/\",\"details\":\"Can be used in both proxy and non-proxy mode.\",\"kind\":\"dev\",\"methods\":{\"_NAME()\":{\"details\":\"Convert to `string` which looks prettier on Etherscan viewer.\"},\"constructor\":{\"details\":\"`owner` is set by argument, thus the owner can any address.      When used in non-proxy mode, `initialize` can not be called      after deployment.\"},\"initialize(address)\":{\"details\":\"When used in proxy mode, `initialize` can be called by anyone      to claim the ownership.      This function can be called only once.\"}},\"title\":\"BaseOwnable - Simple ownership access control contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Make the contract immutable.\"},\"setPendingOwner(address)\":{\"notice\":\"The original owner calls `setPendingOwner(newOwner)` and the new         owner calls `acceptOwner()` to take the ownership.\"},\"transferOwnership(address)\":{\"notice\":\"User should ensure the corrent owner address set, or the         ownership may be transferred to blackhole. It is recommended to         take a safer way with setPendingOwner() + acceptOwner().\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/base/BaseOwnable.sol\":\"BaseOwnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"interfaces/IVersion.sol\":{\"keccak256\":\"0x2a3095cc158e1a08deeeecabe122153d131d8dca0f670a7ed7ec9f2c0d39f1b3\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cd1e88b5cea3244ae5a0515c795a53851fa337c9125db0b3ec724669b5863216\",\"dweb:/ipfs/QmQNJ9Q3xKbUHpnVbevKk2RYEytKmWhn1PqpkVq2Pt2MF9\"]},\"src/CustomErrors.sol\":{\"keccak256\":\"0x3643e7b3d929759cbc1ae5bc3e27a5452a91d0e31bca2d134e23745bee731af4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://03ff8eec146c3072e5619ee5959abaab3a357fe80203bd0223c39b7c9a9fb9d0\",\"dweb:/ipfs/Qmd8fkUK5enaw57qG7qWxvb8JLS4FGmWinmcobQtELYMwU\"]},\"src/base/BaseOwnable.sol\":{\"keccak256\":\"0xf01dd04642e94872c83c34c948116684a31aa77e40d071555e570025671b538c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://82b84774e8fbc21f3955803ece80ab27d179d1d3c05e10b7b7a511e84e952d21\",\"dweb:/ipfs/QmYt9twqkbWjmgKfL7HTCEFZPpAhwFgh9W29g7EKXL5rPo\"]},\"src/base/BaseVersion.sol\":{\"keccak256\":\"0xcfc5439e2e963883718401de74da7f08c6b6f4408530dd5c8c2c82ff0d379da3\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9ad5b5daf456cb027e38970a13a0eb3afb31b4bc929836c5e0f8d0f03e573588\",\"dweb:/ipfs/QmbJKbT7QJHmsSGUzzGSLgdMdvAgGPV6ScTbpLfnKGJWLM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true}],"type":"event","name":"NewOwnerSet","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true}],"type":"event","name":"PendingOwnerSet","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"NAME","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"VERSION","outputs":[{"internalType":"uint256","name":"version","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"_NAME","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptOwner"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPendingOwner"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"_NAME()":{"details":"Convert to `string` which looks prettier on Etherscan viewer."},"constructor":{"details":"`owner` is set by argument, thus the owner can any address.      When used in non-proxy mode, `initialize` can not be called      after deployment."},"initialize(address)":{"details":"When used in proxy mode, `initialize` can be called by anyone      to claim the ownership.      This function can be called only once."}},"version":1},"userdoc":{"kind":"user","methods":{"renounceOwnership()":{"notice":"Make the contract immutable."},"setPendingOwner(address)":{"notice":"The original owner calls `setPendingOwner(newOwner)` and the new         owner calls `acceptOwner()` to take the ownership."},"transferOwnership(address)":{"notice":"User should ensure the corrent owner address set, or the         ownership may be transferred to blackhole. It is recommended to         take a safer way with setPendingOwner() + acceptOwner()."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/base/BaseOwnable.sol":"BaseOwnable"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"interfaces/IVersion.sol":{"keccak256":"0x2a3095cc158e1a08deeeecabe122153d131d8dca0f670a7ed7ec9f2c0d39f1b3","urls":["bzz-raw://cd1e88b5cea3244ae5a0515c795a53851fa337c9125db0b3ec724669b5863216","dweb:/ipfs/QmQNJ9Q3xKbUHpnVbevKk2RYEytKmWhn1PqpkVq2Pt2MF9"],"license":"LGPL-3.0-only"},"src/CustomErrors.sol":{"keccak256":"0x3643e7b3d929759cbc1ae5bc3e27a5452a91d0e31bca2d134e23745bee731af4","urls":["bzz-raw://03ff8eec146c3072e5619ee5959abaab3a357fe80203bd0223c39b7c9a9fb9d0","dweb:/ipfs/Qmd8fkUK5enaw57qG7qWxvb8JLS4FGmWinmcobQtELYMwU"],"license":"LGPL-3.0-only"},"src/base/BaseOwnable.sol":{"keccak256":"0xf01dd04642e94872c83c34c948116684a31aa77e40d071555e570025671b538c","urls":["bzz-raw://82b84774e8fbc21f3955803ece80ab27d179d1d3c05e10b7b7a511e84e952d21","dweb:/ipfs/QmYt9twqkbWjmgKfL7HTCEFZPpAhwFgh9W29g7EKXL5rPo"],"license":"LGPL-3.0-only"},"src/base/BaseVersion.sol":{"keccak256":"0xcfc5439e2e963883718401de74da7f08c6b6f4408530dd5c8c2c82ff0d379da3","urls":["bzz-raw://9ad5b5daf456cb027e38970a13a0eb3afb31b4bc929836c5e0f8d0f03e573588","dweb:/ipfs/QmbJKbT7QJHmsSGUzzGSLgdMdvAgGPV6ScTbpLfnKGJWLM"],"license":"LGPL-3.0-only"}},"version":1},"id":101}